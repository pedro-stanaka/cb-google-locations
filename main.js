// Generated by CoffeeScript 1.10.0
(function() {
  var JSONStream, argv, configs, configurationFile, couchbase, es, fs, processLocation;

  fs = require('fs');

  JSONStream = require('JSONStream');

  es = require('event-stream');

  couchbase = require('couchbase');

  argv = require('yargs').demand('f').alias('f', 'file').check(function(argv, options) {
    var e, error;
    try {
      fs.accessSync(argv.f, fs.F_OK);
      return true;
    } catch (error) {
      e = error;
      return false;
    }
  }).nargs('f', 1).help('h').alias('h', 'help').argv;

  configurationFile = 'config.json';

  configs = JSON.parse(fs.readFileSync(configurationFile));

  configs.debug = configs.debug || false;

  console.log(configs);

  processLocation = function(location, verbose, bucket) {
    return bucket.upsert('pedro-gl-' + location.timestampMs, location, function(err, result) {
      if (err) {
        console.log("There was a problem while inserting the document... ", err);
      }
      if (verbose) {
        return console.log(result.value);
      }
    });
  };

  fs.access(argv.f, fs.F_OK, function(err) {
    var fileStream;
    if (!err) {
      fileStream = fs.createReadStream(argv.f, {
        encoding: 'utf8'
      });
      return fileStream.pipe(JSONStream.parse('locations.*')).pipe(es.through(function(data) {
        var bucket, cluster;
        cluster = new couchbase.Cluster('couchbase://' + configs.host);
        bucket = cluster.openBucket(configs.bucket);
        console.log('location of file::');
        console.log(data);
        processLocation(data, configs.debug, bucket);
        return bucket.disconnect();
      }, function() {
        console.log('stream reading ended');
        return this.emit('end');
      }));
    }
  });

}).call(this);
